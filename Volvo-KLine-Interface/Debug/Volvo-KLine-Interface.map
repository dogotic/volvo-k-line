Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_udivmodsi4.o)
                              ./UART.o (__udivmodsi4)
/usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o (exit)
/usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_clear_bss.o)
                              ./UART.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

rx_handlers         0x8               ./UART.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000800200 0x000000000000fe00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o
LOAD ./UART.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/libatmega2560.a
END GROUP
                0x0000000000100000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x100000
                0x000000000000fe00                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xfe00
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x5f6
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000000000000e4                . = ALIGN (0x2)
                0x00000000000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000e4        0x8 linker stubs
 *(.trampolines*)
                0x00000000000000ec                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x00000000000000ec                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000ec                __ctors_start = .
 *(.ctors)
                0x00000000000000ec                __ctors_end = .
                0x00000000000000ec                __dtors_start = .
 *(.dtors)
                0x00000000000000ec                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000ec        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o
                0x00000000000000ec                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000ec       0x10 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000fc       0x1a /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_copy_data.o)
                0x00000000000000fc                __do_copy_data
 .init4         0x0000000000000116       0x10 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_clear_bss.o)
                0x0000000000000116                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000126        0x8 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o
 *(.init9)
 *(.text)
 .text          0x000000000000012e        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o
                0x000000000000012e                __vector_38
                0x000000000000012e                __vector_22
                0x000000000000012e                __vector_28
                0x000000000000012e                __vector_1
                0x000000000000012e                __vector_32
                0x000000000000012e                __vector_34
                0x000000000000012e                __vector_24
                0x000000000000012e                __vector_12
                0x000000000000012e                __vector_55
                0x000000000000012e                __vector_46
                0x000000000000012e                __bad_interrupt
                0x000000000000012e                __vector_6
                0x000000000000012e                __vector_31
                0x000000000000012e                __vector_35
                0x000000000000012e                __vector_39
                0x000000000000012e                __vector_3
                0x000000000000012e                __vector_23
                0x000000000000012e                __vector_30
                0x000000000000012e                __vector_45
                0x000000000000012e                __vector_11
                0x000000000000012e                __vector_13
                0x000000000000012e                __vector_17
                0x000000000000012e                __vector_19
                0x000000000000012e                __vector_56
                0x000000000000012e                __vector_7
                0x000000000000012e                __vector_49
                0x000000000000012e                __vector_41
                0x000000000000012e                __vector_43
                0x000000000000012e                __vector_27
                0x000000000000012e                __vector_5
                0x000000000000012e                __vector_33
                0x000000000000012e                __vector_47
                0x000000000000012e                __vector_52
                0x000000000000012e                __vector_37
                0x000000000000012e                __vector_4
                0x000000000000012e                __vector_44
                0x000000000000012e                __vector_9
                0x000000000000012e                __vector_2
                0x000000000000012e                __vector_21
                0x000000000000012e                __vector_15
                0x000000000000012e                __vector_29
                0x000000000000012e                __vector_40
                0x000000000000012e                __vector_8
                0x000000000000012e                __vector_26
                0x000000000000012e                __vector_48
                0x000000000000012e                __vector_14
                0x000000000000012e                __vector_53
                0x000000000000012e                __vector_10
                0x000000000000012e                __vector_50
                0x000000000000012e                __vector_16
                0x000000000000012e                __vector_18
                0x000000000000012e                __vector_20
                0x000000000000012e                __vector_42
 .text          0x0000000000000132        0x0 ./UART.o
 .text          0x0000000000000132        0x0 ./main.o
 .text          0x0000000000000132        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000132        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
 .text          0x0000000000000132        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_copy_data.o)
 .text          0x0000000000000132        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_clear_bss.o)
                0x0000000000000132                . = ALIGN (0x2)
 *(.text.*)
 .text.UART_Init
                0x0000000000000132       0xba ./UART.o
                0x0000000000000132                UART_Init
 .text.UART_SetBaudRate
                0x00000000000001ec       0x7a ./UART.o
                0x00000000000001ec                UART_SetBaudRate
 .text.UART_Transmit
                0x0000000000000266       0x48 ./UART.o
                0x0000000000000266                UART_Transmit
 .text.UART_TransmitMultibyte
                0x00000000000002ae       0xda ./UART.o
                0x00000000000002ae                UART_TransmitMultibyte
 .text.UART_SetRxCallback
                0x0000000000000388       0x38 ./UART.o
                0x0000000000000388                UART_SetRxCallback
 .text.__vector_25
                0x00000000000003c0       0x5a ./UART.o
                0x00000000000003c0                __vector_25
 .text.__vector_36
                0x000000000000041a       0x5a ./UART.o
                0x000000000000041a                __vector_36
 .text.__vector_51
                0x0000000000000474       0x5a ./UART.o
                0x0000000000000474                __vector_51
 .text.__vector_54
                0x00000000000004ce       0x5a ./UART.o
                0x00000000000004ce                __vector_54
 .text.ProcessCommands
                0x0000000000000528        0x8 ./main.o
                0x0000000000000528                ProcessCommands
 .text.K_LineReceiver
                0x0000000000000530        0x8 ./main.o
                0x0000000000000530                K_LineReceiver
 .text.startup.main
                0x0000000000000538       0x76 ./main.o
                0x0000000000000538                main
 .text.libgcc.mul
                0x00000000000005ae        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x00000000000005ae       0x44 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_udivmodsi4.o)
                0x00000000000005ae                __udivmodsi4
 .text.libgcc   0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_clear_bss.o)
                0x00000000000005f2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000005f2        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
                0x00000000000005f2                exit
                0x00000000000005f2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000005f2        0x4 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000005f6                _etext = .

.data           0x0000000000800200       0x44 load address 0x00000000000005f6
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o
 .data          0x0000000000800200        0x0 ./UART.o
 .data          0x0000000000800200        0x0 ./main.o
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_copy_data.o)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800200       0x43 ./main.o
 *(.gnu.linkonce.d*)
                0x0000000000800244                . = ALIGN (0x2)
 *fill*         0x0000000000800243        0x1 
                0x0000000000800244                _edata = .
                0x0000000000800244                PROVIDE (__data_end, .)

.bss            0x0000000000800244        0x8
                0x0000000000800244                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800244        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o
 .bss           0x0000000000800244        0x0 ./UART.o
 .bss           0x0000000000800244        0x0 ./main.o
 .bss           0x0000000000800244        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800244        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_exit.o)
 .bss           0x0000000000800244        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_copy_data.o)
 .bss           0x0000000000800244        0x0 /usr/lib/gcc/avr/5.4.0/avr6/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800244        0x8 ./UART.o
                0x0000000000800244                rx_handlers
                0x000000000080024c                PROVIDE (__bss_end, .)
                0x00000000000005f6                __data_load_start = LOADADDR (.data)
                0x000000000000063a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080024c        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x000000000080024c                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0xdec
 *(.stab)
 .stab          0x0000000000000000      0x9d8 ./UART.o
 .stab          0x00000000000009d8      0x414 ./main.o
                                        0x5f4 (size before relaxing)

.stabstr        0x0000000000000000      0xe2b
 *(.stabstr)
 .stabstr       0x0000000000000000      0xe2b ./UART.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./UART.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xbbc
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0xbbc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o

.debug_abbrev   0x0000000000000000      0xb1a
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0xb1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x3e6
 *(.debug_str)
 .debug_str     0x0000000000000000      0x3e6 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr6/crtatmega2560.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Volvo-KLine-Interface.elf elf32-avr)
LOAD linker stubs
